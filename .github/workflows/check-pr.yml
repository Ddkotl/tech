name: Pull requests check

on:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: |
          sudo apt-get install -y postgresql-client
          until pg_isready -h localhost -p 5432 -U postgres; do
            sleep 1
          done
          psql -h localhost -p 5432 -U postgres -c 'CREATE DATABASE test;'
        env:
          PGPASSWORD: postgres
      - run: npm install pm2 -g
      - run: bun i --no-cache
      - run: npx prisma db push
      - run: bun run lint
      - run: bun run lint:types
      - run: bun run test
      - run: bun run build
      - run: npx pm2 start npm --name test -- bun run start
      - run: |
          # Wait for the app to start
          for i in {1..10}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "App is up and running!"
              break
            fi
            echo "Waiting for the app to start..."
            sleep 3
          done
      - run: npx playwright install-deps
      - run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: bun run test:e2e
        env:
          TEST_ENV_BASE_URL: http://localhost:3000
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
