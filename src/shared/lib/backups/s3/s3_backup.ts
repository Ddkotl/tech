import { execSync } from "child_process";
import { config } from "dotenv";
import fs from "fs";
import path from "path";

config();

const {
  MINIO_CONTAINER,
  S3_IMAGES_BUCKET,
  BACKUP_DIR,
  MINIO_ROOT_USER,
  MINIO_ROOT_PASSWORD,
} = process.env;

if (
  !MINIO_CONTAINER ||
  !S3_IMAGES_BUCKET ||
  !BACKUP_DIR ||
  !MINIO_ROOT_USER ||
  !MINIO_ROOT_PASSWORD
) {
  console.error("‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ MinIO
export const createMinioBackup = () => {
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  fs.mkdirSync(BACKUP_DIR, { recursive: true });
  fs.mkdirSync(`${BACKUP_DIR}/db_old`, { recursive: true });
  fs.mkdirSync(`${BACKUP_DIR}/minio_old`, { recursive: true });

  const date = new Date().toISOString().replace(/[:.]/g, "-");
  const backupFolder = path.join(BACKUP_DIR, `minio_backup_tech_${date}`);

  try {
    console.log(`üìÄ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö MinIO –≤ ${backupFolder}...`);

    // –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –∫–æ–ø–∏–∏
    fs.mkdirSync(backupFolder, { recursive: true });

    // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∏–∑ MinIO –Ω–∞ —Ö–æ—Å—Ç
    execSync(
      `docker exec ${MINIO_CONTAINER} mc alias set myminio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
       docker exec ${MINIO_CONTAINER} mc cp --recursive myminio/${S3_IMAGES_BUCKET} /tmp/minio_backup > /dev/null &&
       docker cp ${MINIO_CONTAINER}:/tmp/minio_backup ${backupFolder} > /dev/null`,
      { stdio: "inherit" },
    );

    // –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –Ω–∞ —Ö–æ—Å—Ç–µ
    execSync(
      `tar -cjf ${backupFolder}.tar.bz2 -C ${BACKUP_DIR} minio_backup_tech_${date}`,
      { stdio: "inherit" },
    );

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    fs.rmSync(backupFolder, { recursive: true, force: true });

    console.log(`‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${backupFolder}.tar.bz2`);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ MinIO:", error);
  }
};

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
createMinioBackup();
