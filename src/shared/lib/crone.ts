// src/lib/setupCron.ts
import cron from "node-cron";
import { StartParse } from "./parsing";
import { createBackup } from "./backups/db/db_backup";
import { cleanupOldDBBackups } from "./backups/db/db_cleen";
import { createMinioBackup } from "./backups/s3/s3_backup";
import { cleanupOldMinioBackups } from "./backups/s3/s3_cleen";

// * * * * *
// - - - - -
// | | | | |
// | | | | +--- –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0 - 6) (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ = 0)
// | | | +----- –º–µ—Å—è—Ü (1 - 12)
// | | +------- –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ (1 - 31)
// | +--------- —á–∞—Å (0 - 23)
// +----------- –º–∏–Ω—É—Ç–∞ (0 - 59)
// * * * * * ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É.
// 0 * * * * ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π —á–∞—Å –≤ 0 –º–∏–Ω—É—Ç.
// */5 * * * * ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.
// * * 1 * * ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 1-–≥–æ —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞
export const setupCron = () => {
  // –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
  cron.schedule("0 0 1 1 *", async () => {
    console.log(" –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞...");
    try {
      await StartParse();
      console.log("–ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω.");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞:", error);
    }
  });

  cron.schedule("0 3 * * *", async () => {
    console.log("üìÄ –ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞...");
    try {
      createBackup();
      createMinioBackup();
      cleanupOldDBBackups();
      cleanupOldMinioBackups();
      console.log("‚úÖ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω.");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞:", error);
    }
  });

  console.log("Cron –∑–∞–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞");
};
